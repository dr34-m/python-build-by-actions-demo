name: 构建

on:
  push:
    branches: [ 'main' ]
    paths: [ 'version.txt' ]

jobs:
  get-version:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 获取版本号
        run: |
          versions=$(head -n 1 version.txt)
          tagList=""
          IFS=',' read -ra versionList <<< "$versions"
          cuVersion="${versionList[0]}"
          for version in "${versionList[@]}"; do
            tagList+="dr34m/python-action-demo:$version,"
          done
          tagList=${tagList%?}
          echo "TAG_LIST=$tagList" >> $GITHUB_OUTPUT
          echo "VERSION=$cuVersion" >> $GITHUB_OUTPUT

  build-frontend:
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      VERSION: ${{needs.get-version.outputs.VERSION}}

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 安装Node.js 14.x
        uses: actions/setup-node@v4
        with:
          node-version: "14.x"

      - name: 安装依赖并构建前端
        run: |
          sed -i "s/__version_placeholder__/$VERSION/g" frontend/src/views/page/setting/index.vue
          cd frontend
          npm install
          npm run build

      - name: 上传artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          retention-days: 1

  build-docker:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    env:
      TAG_LIST: ${{needs.get-version.outputs.TAG_LIST}}

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 下载前端
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: 登录到DockerHub
        uses: docker/login-action@v3
        with:
          username: dr34m
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TAG_LIST }}
          platforms: linux/amd64

  create-tag:
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      VERSION: ${{needs.get-version.outputs.VERSION}}
    if: ${{ !contains(env.VERSION, 'dev') && !contains(env.VERSION, 'pre') }}

    steps:
      - name: 打tag
        run: |
          git config --local user.email "1416814478@qq.com"
          git config --local user.name "dr34-m"
          git tag -a $VERSION -m "release $VERSION"

      - name: 推送tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

